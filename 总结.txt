目标： 商城项目
开发流程：
	提出需求（客户、产品经理）-->
	分析需求(技术总监)-->
	搭框架(设计师，主管）-->
	分模块写代码（程序员）-->
	测试（程序员，测试人员）


			----------项目实战---------

			========商城第一天========

	一、搭建环境
	1.创建一个web工程
	
	2.导入素材，jar包
	
	3.数据库初始化
	
	二、项目实施
	  1. 后台管理----分层设计（entity,dao,service,servlet,utils） 
	     1.jdbc操作与测试
	       DBUtils----数据库的工具类
	       CommonUtils---公共的数据库操作工具类
	
	     2.UserDao的增删改查操作---传sql执行语句，参数，反射对象
	
	     3.在单元测试中进行测试 
	     src--->分层代码 
	     test-->纯粹做dao和工具类的单元测试
	     config--放配置文件
	
	  2. 用户管理
	     1.用户管理的数据展示
	     ----要理解前端页面的技术  
	
	     2.分页功能
	     ---分页封装
		  建立实体类：Page
		  里面的属性：当前页，页大小，页数量，总条数，数据，url路径
		  后台只需传入page对象到前端即可
	
	作业： 用户管理的增、删、改---及url路径设置

	       
			========商城第二天========
		
	1. 静态包含分页的内容
	----将url路径设置到page中方便其他管理共用
	
	2. 用户管理的增、删、改
	   1. 增删改操作的统一提示问题（操作失败的提示）
	   2. 中文乱码的处理--通过编码过滤器进行处理
	   3. 统一将添加和修改的获取参数进行封装（注意：添加时没有id，需要特殊处理）
	   
	3. 用户管理的批量删除
	   1. 在前端设置全选功能，并将全选的多个id传入到后台（如何传？）
	      ------使用jquery的异步操作将多个id拼到对象中，并传入后台
	   2. 在后台如何进行批量处理？  
	   ------在后台拼成以下的执行语句：
	   delete from t_user where id in (100,101)
	   
	4. 商品类别的管理---类似用户管理
	   1. 先测试商品类别的增，查--（删，改为作业）
	   2. 商品类别的展示页面---直接做分页功能
	   3. 商品类别的添加功能
	   ----先到达后台，去获取父类id为0的类别名称，显示到前端的父类id的下拉列表中
	   ----再将大类或小类进行添加--（如果父类id为0（无）--大类；如果父类id不为0---小类）
	   
	   作业： 商品类别的编辑和删除
	   选做：商品信息的dao层增、查的测试----然后做商品信息的展示
	   
	   
			========商城第三天========
		
	1. 商品信息管理
	   1.商品信息的增、查、分页的dao层测试
	   2.商品信息的展示页面---直接做分页功能
	   3.商品信息的添加功能 
	     关键点1：添加商品所属的大类和小类：
	   -------先显示大类：select * from t_goods_type where gtype_parentid=0  
	   -------再根据选择的大类，联动查询出小类：  
	      案例：熟食类下的小类：select * from t_goods_type where gtype_parentid=3  
	      
	     通过异步的方式选择大类联动查询出小类，并展示到前端---局部刷新   
	      
	     关键点2: 商品信息的添加的完成  
	   ------有图片上传--用到图片上传技术
	   1.客户端： 1.请求方式：post  2. 编码类型是二进制的  3. 控件类型：file
	   
	   2.服务器： 第三方jar包处理---通过servlet的文件上传对象解析request
	          在内部要判断是否为文本表单--（取普通控件内容）和非文本表单--（上传图片）
	          注意：图片存储到完整的部署路径中；  在数据库中存相对路径的图片名称       
	          
	2. 后台登录问题：
	   问题1： 想进入后台操作，必须先进行后台登录
	  ------通过过滤器进行约束，如果没有登录，先进行登录
	        过滤器中的后台servlet限制： UserServlet、GoodsInfoServlet,GoodsTypeServlet
	        过滤器中的back目录下的jsp拦截： back  
	        忽略一些可以访问的路径和action： backLogin.jsp、 backLogin  
	        
	       后台登录校验：
	       根据用户名和密码，在数据库中查找匹配记录，如果没有---用户名或密码出错
	       如果有，但非管理员---提示不是管理员
	       是管理员-------成功，设置登录凭证，过滤器访问任何路径都放行     
	       
	   作业：  商品信息的编辑和删除
	   选做：  验证码校验：
	       ---BufferedImage: 缓存图片
	          Griphics： 使用画笔去绘制填充区域及验证码数字等 
	          imageIO： 将缓存图片展示到前端去                 
	        
	        
			 ========商城第四天========    
			 
	 1. 完善后台管理的相关细节部分
	    1.验证码校验-----验证码更新时，要注意缓存问题
	    2.图片虚拟路径的处理    
	       理解Servers/server.xml的设置
	    <Context docBase="Day46_Shop_4" path="/Day46_Shop_4"/> 
	    path--是映射路径   docBase---真实指定路径
	    3.如果显示不出图片，给定一张默认图片         
	    
	 2. 前端管理-----首页展示 
	       1.前端首页显示商品类别、商品信息             
	       2.展示单个商品----可选择商品数量  
	       
	 3. 加入购物车 （重点与难点）
	   分析购物车设计：  
	    购物车可以存到数据库中； 也可以用session或cookie存---效率高（选择它） 
	    准备工作---创建购物车类      
	  1. 在entity中创建购物车实体类；在购物车中添加或删除商品记录  
	  
	  2. 考虑购物车中的如何存储商品数量（在数据库的商品记录中没有的）
	          增加一个domain层，与前端对接
	          
	  3. 将购物车存储到session中，且相同id只存一条记录，数量改变即可
	  
	  4. 购物车中商品数量的增加和减少的设置
	     1.在onclick标签事件中传入id，通过匹配id，获取存数量的标签对象，然后增加和减少数量
	     2.合计的计算：在购物车中计算出总价，然后通过${shoppingCart.price}获取出来  
	     3.jstl的格式标签库应用：
	     <fmt:formatNumber value="12.345677" pattern="0.00"> 
	     
	   选做作业：   
	   1. 结算时，判断是否进行前端登录---（登录凭证--取出对象）
	   2. 根据取出的用户对象，去匹配地址表里面的地址信息，回传到支付前端(pay.jsp)  
	            用户和地址是一对多的关系  
	    
	            
	 			========商城第五天======== 
	 			 
	   1. 结算时，判断是否进行前端登录---（登录凭证--取出对象）
	      如果没有登录凭证，则进入前端登录页面，进行登录校验并记录登录凭证
	      注意： 在UserServlet中处理的前端登录时，action=frontUser要写入忽略的配置文件中，否则过滤器会拦截  
	      
	   
	   2. 登录成功后，到达结算后台，根据取出的用户对象，去匹配地址表里面的地址信息，回传到支付前端(pay.jsp)  
	            用户和地址是一对多的关系  
	            
	   3. 提交订单：
	      1.创建与数据库订单表对应的订单实体类，并测试订单的成功添加   
	        
	      2.再从支付页面将订单信息传入后台进行订单添加  
	      
	   4. 订单明细的添加：
	     注意： 一个订单有多条商品明细记录
	     问题： 一个订单多条明细，如何进行关联
	     方式1： 订单id不用自增长，手动传入；再将该订单id传到明细表中
	     方式2：主键回填--（重要）添加订单后，返回出订单id
	     
	   5. 使用批处理进行多条订单明细添加  
	   
	   6. 前端登录的显示及注销账户
	   
	   （项目完善）给同学们留的作业说明：
	   1. 记住密码----cookie
	   2. 后台商品类别和商品信息管理的编辑和删除---参数用户管理
	   3. 订单管理的删除、编辑，查找
	   4. 单个商品的立即购买----跳到支付页面--抽取paysingle.jsp
	   5. 购物车的删除功能
	   6. 提交订单中的添加和减少数量
   
           
      
   
   
      
      
            
         
       
     
  
